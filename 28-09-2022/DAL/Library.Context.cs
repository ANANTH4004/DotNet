//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ShoppingEntities : DbContext
    {
        public ShoppingEntities()
            : base("name=ShoppingEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Book> Books { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<Lib_Issue> Lib_Issue { get; set; }
        public virtual DbSet<Member> Members { get; set; }
    
        public virtual int sp_UpdateMember(Nullable<int> memberID, string memberName, Nullable<System.DateTime> openDate, Nullable<decimal> penalty)
        {
            var memberIDParameter = memberID.HasValue ?
                new ObjectParameter("memberID", memberID) :
                new ObjectParameter("memberID", typeof(int));
    
            var memberNameParameter = memberName != null ?
                new ObjectParameter("memberName", memberName) :
                new ObjectParameter("memberName", typeof(string));
    
            var openDateParameter = openDate.HasValue ?
                new ObjectParameter("openDate", openDate) :
                new ObjectParameter("openDate", typeof(System.DateTime));
    
            var penaltyParameter = penalty.HasValue ?
                new ObjectParameter("penalty", penalty) :
                new ObjectParameter("penalty", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateMember", memberIDParameter, memberNameParameter, openDateParameter, penaltyParameter);
        }
    
        public virtual int sp_UpdateBook(Nullable<int> p_BookNo, string p_BookName, string p_Author, Nullable<decimal> p_Cost, string p_Category)
        {
            var p_BookNoParameter = p_BookNo.HasValue ?
                new ObjectParameter("p_BookNo", p_BookNo) :
                new ObjectParameter("p_BookNo", typeof(int));
    
            var p_BookNameParameter = p_BookName != null ?
                new ObjectParameter("p_BookName", p_BookName) :
                new ObjectParameter("p_BookName", typeof(string));
    
            var p_AuthorParameter = p_Author != null ?
                new ObjectParameter("p_Author", p_Author) :
                new ObjectParameter("p_Author", typeof(string));
    
            var p_CostParameter = p_Cost.HasValue ?
                new ObjectParameter("p_Cost", p_Cost) :
                new ObjectParameter("p_Cost", typeof(decimal));
    
            var p_CategoryParameter = p_Category != null ?
                new ObjectParameter("p_Category", p_Category) :
                new ObjectParameter("p_Category", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateBook", p_BookNoParameter, p_BookNameParameter, p_AuthorParameter, p_CostParameter, p_CategoryParameter);
        }
    
        public virtual int sp_BookCount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_BookCount");
        }
    
        public virtual int sp_BookCount1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_BookCount1");
        }
    
        public virtual int sp_BookCount2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_BookCount2");
        }
    
        public virtual int sp_BookCountFinal()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_BookCountFinal");
        }
    
        public virtual ObjectResult<GetAllBook_Result> GetAllBook()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllBook_Result>("GetAllBook");
        }
    }
}
